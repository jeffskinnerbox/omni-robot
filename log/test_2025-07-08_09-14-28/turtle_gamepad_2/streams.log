[0.265s] Invoking command in '/home/jeff/omni-robot/src/turtle_gamepad_2': DEBUGINFOD_URLS=https://debuginfod.ubuntu.com PYTEST_ADDOPTS=--tb=short --junit-xml=/home/jeff/omni-robot/build/turtle_gamepad_2/pytest.xml --junit-prefix=turtle_gamepad_2 -o cache_dir=/home/jeff/omni-robot/build/turtle_gamepad_2/.pytest_cache PYTHONDONTWRITEBYTECODE=1 /usr/bin/python3 -m pytest
[0.647s] [1m============================= test session starts ==============================[0m
[0.648s] platform linux -- Python 3.12.3, pytest-7.4.4, pluggy-1.4.0
[0.651s] cachedir: /home/jeff/omni-robot/build/turtle_gamepad_2/.pytest_cache
[0.651s] rootdir: /home/jeff/omni-robot/src/turtle_gamepad_2
[0.652s] plugins: ament-pep257-0.17.2, ament-lint-0.17.2, ament-copyright-0.17.2, launch-testing-3.4.5, launch-testing-ros-0.26.8, ament-flake8-0.17.2, ament-xmllint-0.17.2, cov-4.1.0, typeguard-4.1.5, colcon-core-0.19.0
[0.953s] [1mcollecting ... [0m[1m
[0.954s] collected 8 items                                                              [0m
[0.954s] 
[0.958s] test/test_copyright.py [33ms[0m[32m                                                 [ 12%][0m
[0.964s] test/test_emergency_stop_monitor.py [32m.[0m[32m.[0m[32m                                   [ 37%][0m
[1.119s] test/test_flake8.py [31mF[0m[31m                                                    [ 50%][0m
[1.147s] test/test_pep257.py [31mF[0m[31m                                                    [ 62%][0m
[1.150s] test/test_turtle_gamepad_controller.py [32m.[0m[32m.[0m[32m.[0m[31m                               [100%][0m
[1.151s] 
[1.151s] =================================== FAILURES ===================================
[1.151s] [31m[1m_________________________________ test_flake8 __________________________________[0m
[1.151s] [1m[31mtest/test_flake8.py[0m:23: in test_flake8
[1.175s]     [94massert[39;49;00m rc == [94m0[39;49;00m, \
[1.176s] [1m[31mE   AssertionError: Found 50 code style errors / warnings:[0m
[1.176s] [1m[31mE     ./launch/turtle_gamepad_launch.py:4:1: I201 Missing newline between import groups. 'from launch import LaunchDescription' is identified as Third Party and 'import os' is identified as Stdlib.[0m
[1.176s] [1m[31mE     ./launch/turtle_gamepad_launch.py:5:1: F401 'launch.actions.IncludeLaunchDescription' imported but unused[0m
[1.176s] [1m[31mE     ./launch/turtle_gamepad_launch.py:6:1: F401 'launch.conditions.IfCondition' imported but unused[0m
[1.176s] [1m[31mE     ./launch/turtle_gamepad_launch.py:7:1: F401 'launch.launch_description_sources.PythonLaunchDescriptionSource' imported but unused[0m
[1.176s] [1m[31mE     ./launch/turtle_gamepad_launch.py:8:1: F401 'launch.substitutions.PathJoinSubstitution' imported but unused[0m
[1.176s] [1m[31mE     ./launch/turtle_gamepad_launch.py:10:1: F401 'launch_ros.substitutions.FindPackageShare' imported but unused[0m
[1.177s] [1m[31mE     ./launch/turtle_gamepad_launch.py:11:1: I100 Import statements are in the wrong order. 'from ament_index_python.packages import get_package_share_directory' should be before 'from launch_ros.substitutions import FindPackageShare'[0m
[1.177s] [1m[31mE     ./launch/turtle_gamepad_simple_launch.py:4:1: I201 Missing newline between import groups. 'from launch import LaunchDescription' is identified as Third Party and 'import os' is identified as Stdlib.[0m
[1.177s] [1m[31mE     ./launch/turtle_gamepad_simple_launch.py:5:1: F401 'launch.actions.DeclareLaunchArgument' imported but unused[0m
[1.177s] [1m[31mE     ./launch/turtle_gamepad_simple_launch.py:6:1: F401 'launch.substitutions.LaunchConfiguration' imported but unused[0m
[1.177s] [1m[31mE     ./launch/turtle_gamepad_simple_launch.py:8:1: I100 Import statements are in the wrong order. 'from ament_index_python.packages import get_package_share_directory' should be before 'from launch_ros.actions import Node'[0m
[1.177s] [1m[31mE     ./setup.py:2:1: I100 Import statements are in the wrong order. 'import os' should be before 'from setuptools import find_packages, setup' and in a different group.[0m
[1.177s] [1m[31mE     ./setup.py:2:1: I201 Missing newline between import groups. 'import os' is identified as Stdlib and 'from setuptools import find_packages, setup' is identified as Third Party.[0m
[1.177s] [1m[31mE     ./setup.py:3:1: I100 Import statements are in the wrong order. 'from glob import glob' should be before 'import os'[0m
[1.177s] [1m[31mE     ./setup.py:15:100: E501 line too long (109 > 99 characters)[0m
[1.177s] [1m[31mE     ./test/test_emergency_stop_monitor.py:5:1: F401 'rclpy.node.Node' imported but unused[0m
[1.178s] [1m[31mE     ./test/test_emergency_stop_monitor.py:7:1: I100 Import statements are in the wrong order. 'from geometry_msgs.msg import Twist' should be before 'from std_msgs.msg import Bool'[0m
[1.178s] [1m[31mE     ./test/test_emergency_stop_monitor.py:13:1: D400 First line should end with a period[0m
[1.178s] [1m[31mE     ./test/test_emergency_stop_monitor.py:13:1: D401 First line should be in imperative mood; try rephrasing[0m
[1.178s] [1m[31mE     ./test/test_emergency_stop_monitor.py:18:1: D400 First line should end with a period[0m
[1.178s] [1m[31mE     ./test/test_emergency_stop_monitor.py:22:1: D400 First line should end with a period[0m
[1.178s] [1m[31mE     ./test/test_emergency_stop_monitor.py:26:32: E712 comparison to True should be 'if cond is True:' or 'if cond:'[0m
[1.178s] [1m[31mE     ./test/test_emergency_stop_monitor.py:29:1: D400 First line should end with a period[0m
[1.178s] [1m[31mE     ./test/test_turtle_gamepad_controller.py:5:1: F401 'rclpy.node.Node' imported but unused[0m
[1.178s] [1m[31mE     ./test/test_turtle_gamepad_controller.py:6:1: I100 Import statements are in the wrong order. 'from geometry_msgs.msg import Twist' should be before 'from rclpy.node import Node'[0m
[1.178s] [1m[31mE     ./test/test_turtle_gamepad_controller.py:9:1: I100 Import statements are in the wrong order. 'import time' should be before 'from std_msgs.msg import Bool' and in a different group.[0m
[1.178s] [1m[31mE     ./test/test_turtle_gamepad_controller.py:9:1: I201 Missing newline between import groups. 'import time' is identified as Stdlib and 'from std_msgs.msg import Bool' is identified as Third Party.[0m
[1.178s] [1m[31mE     ./test/test_turtle_gamepad_controller.py:9:1: F401 'time' imported but unused[0m
[1.178s] [1m[31mE     ./test/test_turtle_gamepad_controller.py:10:1: I100 Import statements are in the wrong order. 'import threading' should be before 'import time'[0m
[1.178s] [1m[31mE     ./test/test_turtle_gamepad_controller.py:10:1: F401 'threading' imported but unused[0m
[1.178s] [1m[31mE     ./test/test_turtle_gamepad_controller.py:16:1: D400 First line should end with a period[0m
[1.178s] [1m[31mE     ./test/test_turtle_gamepad_controller.py:16:1: D401 First line should be in imperative mood; try rephrasing[0m
[1.178s] [1m[31mE     ./test/test_turtle_gamepad_controller.py:21:1: D400 First line should end with a period[0m
[1.178s] [1m[31mE     ./test/test_turtle_gamepad_controller.py:25:1: D400 First line should end with a period[0m
[1.178s] [1m[31mE     ./test/test_turtle_gamepad_controller.py:34:1: D400 First line should end with a period[0m
[1.178s] [1m[31mE     ./test/test_turtle_gamepad_controller.py:47:1: D400 First line should end with a period[0m
[1.179s] [1m[31mE     ./test/test_turtle_gamepad_controller.py:51:35: E712 comparison to True should be 'if cond is True:' or 'if cond:'[0m
[1.179s] [1m[31mE     ./test/test_turtle_gamepad_controller.py:54:35: E712 comparison to False should be 'if cond is False:' or 'if not cond:'[0m
[1.179s] [1m[31mE     ./turtle_gamepad_2/emergency_stop_monitor.py:6:1: I100 Import statements are in the wrong order. 'from geometry_msgs.msg import Twist' should be before 'from std_msgs.msg import Bool'[0m
[1.179s] [1m[31mE     ./turtle_gamepad_2/emergency_stop_monitor.py:30:1: D400 First line should end with a period[0m
[1.179s] [1m[31mE     ./turtle_gamepad_2/emergency_stop_monitor.py:39:1: D400 First line should end with a period[0m
[1.179s] [1m[31mE     ./turtle_gamepad_2/emergency_stop_monitor.py:45:1: D400 First line should end with a period[0m
[1.179s] [1m[31mE     ./turtle_gamepad_2/turtle_gamepad_controller.py:5:1: I100 Import statements are in the wrong order. 'from geometry_msgs.msg import Twist' should be before 'from rclpy.node import Node'[0m
[1.179s] [1m[31mE     ./turtle_gamepad_2/turtle_gamepad_controller.py:8:1: I100 Import statements are in the wrong order. 'import math' should be before 'from std_msgs.msg import Bool' and in a different group.[0m
[1.179s] [1m[31mE     ./turtle_gamepad_2/turtle_gamepad_controller.py:8:1: I201 Missing newline between import groups. 'import math' is identified as Stdlib and 'from std_msgs.msg import Bool' is identified as Third Party.[0m
[1.179s] [1m[31mE     ./turtle_gamepad_2/turtle_gamepad_controller.py:8:1: F401 'math' imported but unused[0m
[1.179s] [1m[31mE     ./turtle_gamepad_2/turtle_gamepad_controller.py:21:100: E501 line too long (114 > 99 characters)[0m
[1.179s] [1m[31mE     ./turtle_gamepad_2/turtle_gamepad_controller.py:53:1: D400 First line should end with a period[0m
[1.179s] [1m[31mE     ./turtle_gamepad_2/turtle_gamepad_controller.py:134:1: D400 First line should end with a period[0m
[1.179s] [1m[31mE     ./turtle_gamepad_2/turtle_gamepad_controller.py:143:1: D400 First line should end with a period[0m
[1.179s] [1m[31mE   assert 1 == 0[0m
[1.179s] ----------------------------- Captured stdout call -----------------------------
[1.179s] 
[1.179s] ./launch/turtle_gamepad_launch.py:4:1: I201 Missing newline between import groups. 'from launch import LaunchDescription' is identified as Third Party and 'import os' is identified as Stdlib.
[1.179s] from launch import LaunchDescription
[1.179s] ^
[1.179s] 
[1.179s] ./launch/turtle_gamepad_launch.py:5:1: F401 'launch.actions.IncludeLaunchDescription' imported but unused
[1.179s] from launch.actions import DeclareLaunchArgument, IncludeLaunchDescription
[1.180s] ^
[1.180s] 
[1.180s] ./launch/turtle_gamepad_launch.py:6:1: F401 'launch.conditions.IfCondition' imported but unused
[1.180s] from launch.conditions import IfCondition
[1.180s] ^
[1.180s] 
[1.180s] ./launch/turtle_gamepad_launch.py:7:1: F401 'launch.launch_description_sources.PythonLaunchDescriptionSource' imported but unused
[1.180s] from launch.launch_description_sources import PythonLaunchDescriptionSource
[1.180s] ^
[1.180s] 
[1.180s] ./launch/turtle_gamepad_launch.py:8:1: F401 'launch.substitutions.PathJoinSubstitution' imported but unused
[1.180s] from launch.substitutions import LaunchConfiguration, PathJoinSubstitution
[1.180s] ^
[1.180s] 
[1.180s] ./launch/turtle_gamepad_launch.py:10:1: F401 'launch_ros.substitutions.FindPackageShare' imported but unused
[1.180s] from launch_ros.substitutions import FindPackageShare
[1.180s] ^
[1.180s] 
[1.180s] ./launch/turtle_gamepad_launch.py:11:1: I100 Import statements are in the wrong order. 'from ament_index_python.packages import get_package_share_directory' should be before 'from launch_ros.substitutions import FindPackageShare'
[1.180s] from ament_index_python.packages import get_package_share_directory
[1.180s] ^
[1.180s] 
[1.180s] ./launch/turtle_gamepad_simple_launch.py:4:1: I201 Missing newline between import groups. 'from launch import LaunchDescription' is identified as Third Party and 'import os' is identified as Stdlib.
[1.181s] from launch import LaunchDescription
[1.181s] ^
[1.181s] 
[1.181s] ./launch/turtle_gamepad_simple_launch.py:5:1: F401 'launch.actions.DeclareLaunchArgument' imported but unused
[1.181s] from launch.actions import DeclareLaunchArgument
[1.181s] ^
[1.181s] 
[1.181s] ./launch/turtle_gamepad_simple_launch.py:6:1: F401 'launch.substitutions.LaunchConfiguration' imported but unused
[1.181s] from launch.substitutions import LaunchConfiguration
[1.181s] ^
[1.181s] 
[1.181s] ./launch/turtle_gamepad_simple_launch.py:8:1: I100 Import statements are in the wrong order. 'from ament_index_python.packages import get_package_share_directory' should be before 'from launch_ros.actions import Node'
[1.181s] from ament_index_python.packages import get_package_share_directory
[1.181s] ^
[1.181s] 
[1.181s] ./setup.py:2:1: I100 Import statements are in the wrong order. 'import os' should be before 'from setuptools import find_packages, setup' and in a different group.
[1.181s] import os
[1.181s] ^
[1.181s] 
[1.181s] ./setup.py:2:1: I201 Missing newline between import groups. 'import os' is identified as Stdlib and 'from setuptools import find_packages, setup' is identified as Third Party.
[1.181s] import os
[1.181s] ^
[1.182s] 
[1.182s] ./setup.py:3:1: I100 Import statements are in the wrong order. 'from glob import glob' should be before 'import os'
[1.182s] from glob import glob
[1.182s] ^
[1.182s] 
[1.182s] ./setup.py:15:100: E501 line too long (109 > 99 characters)
[1.182s]         (os.path.join('share', package_name, 'launch'), glob(os.path.join('launch', '*launch.[pxy][yma]*'))),
[1.182s]                                                                                                    ^
[1.182s] 
[1.182s] ./test/test_emergency_stop_monitor.py:5:1: F401 'rclpy.node.Node' imported but unused
[1.182s] from rclpy.node import Node
[1.182s] ^
[1.182s] 
[1.182s] ./test/test_emergency_stop_monitor.py:7:1: I100 Import statements are in the wrong order. 'from geometry_msgs.msg import Twist' should be before 'from std_msgs.msg import Bool'
[1.182s] from geometry_msgs.msg import Twist
[1.182s] ^
[1.182s] 
[1.182s] ./test/test_emergency_stop_monitor.py:13:1: D400 First line should end with a period
[1.182s]         """Setup test environment"""
[1.182s] ^
[1.182s] 
[1.182s] ./test/test_emergency_stop_monitor.py:13:1: D401 First line should be in imperative mood; try rephrasing
[1.182s]         """Setup test environment"""
[1.183s] ^
[1.183s] [33m=============================== warnings summary ===============================[0m
[1.183s] test/test_flake8.py: 12 warnings
[1.183s]   Warning: This process (pid=70357) is multi-threaded, use of fork() may lead to deadlocks in the child.
[1.183s] 
[1.183s] -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
[1.183s] 
[1.183s] ./test/test_emergency_stop_monitor.py:18:1: D400 First line should end with a period
[1.183s]         """Cleanup test environment"""
[1.183s] ^
[1.183s] 
[1.183s] ./test/test_emergency_stop_monitor.py:22:1: D400 First line should end with a period
[1.183s]         """Test emergency stop status handling"""
[1.183s] ^
[1.183s] 
[1.183s] ./test/test_emergency_stop_monitor.py:26:32: E712 comparison to True should be 'if cond is True:' or 'if cond:'
[1.183s]         assert status_msg.data == True
[1.183s]                                ^
[1.183s] 
[1.183s] ./test/test_emergency_stop_monitor.py:29:1: D400 First line should end with a period
[1.183s]         """Test zero velocity command creation"""
[1.183s] ^
[1.183s] 
[1.184s] ./test/test_turtle_gamepad_controller.py:5:1: F401 'rclpy.node.Node' imported but unused
[1.184s] from rclpy.node import Node
[1.184s] ^
[1.184s] 
[1.184s] ./test/test_turtle_gamepad_controller.py:6:1: I100 Import statements are in the wrong order. 'from geometry_msgs.msg import Twist' should be before 'from rclpy.node import Node'
[1.184s] from geometry_msgs.msg import Twist
[1.184s] ^
[1.184s] 
[1.184s] ./test/test_turtle_gamepad_controller.py:9:1: I100 Import statements are in the wrong order. 'import time' should be before 'from std_msgs.msg import Bool' and in a different group.
[1.184s] import time
[1.184s] ^
[1.184s] 
[1.184s] ./test/test_turtle_gamepad_controller.py:9:1: I201 Missing newline between import groups. 'import time' is identified as Stdlib and 'from std_msgs.msg import Bool' is identified as Third Party.
[1.184s] import time
[1.184s] ^
[1.184s] 
[1.184s] ./test/test_turtle_gamepad_controller.py:9:1: F401 'time' imported but unused
[1.184s] import time
[1.184s] ^
[1.184s] 
[1.184s] ./test/test_turtle_gamepad_controller.py:10:1: I100 Import statements are in the wrong order. 'import threading' should be before 'import time'
[1.184s] import threading
[1.184s] ^
[1.185s] 
[1.185s] ./test/test_turtle_gamepad_controller.py:10:1: F401 'threading' imported but unused
[1.185s] import threading
[1.185s] ^
[1.185s] 
[1.185s] ./test/test_turtle_gamepad_controller.py:16:1: D400 First line should end with a period
[1.185s]         """Setup test environment"""
[1.185s] ^
[1.185s] 
[1.185s] ./test/test_turtle_gamepad_controller.py:16:1: D401 First line should be in imperative mood; try rephrasing
[1.185s]         """Setup test environment"""
[1.185s] ^
[1.185s] 
[1.185s] ./test/test_turtle_gamepad_controller.py:21:1: D400 First line should end with a period
[1.185s]         """Cleanup test environment"""
[1.185s] ^
[1.185s] 
[1.185s] ./test/test_turtle_gamepad_controller.py:25:1: D400 First line should end with a period
[1.185s]         """Test joy message format"""
[1.185s] ^
[1.185s] 
[1.185s] ./test/test_turtle_gamepad_controller.py:34:1: D400 First line should end with a period
[1.185s]         """Test twist message creation"""
[1.186s] ^
[1.186s] 
[1.186s] ./test/test_turtle_gamepad_controller.py:47:1: D400 First line should end with a period
[1.186s]         """Test emergency stop message"""
[1.186s] ^
[1.186s] 
[1.186s] ./test/test_turtle_gamepad_controller.py:51:35: E712 comparison to True should be 'if cond is True:' or 'if cond:'
[1.186s]         assert emergency_msg.data == True
[1.186s]                                   ^
[1.186s] 
[1.186s] ./test/test_turtle_gamepad_controller.py:54:35: E712 comparison to False should be 'if cond is False:' or 'if not cond:'
[1.186s]         assert emergency_msg.data == False
[1.186s]                                   ^
[1.186s] 
[1.186s] ./turtle_gamepad_2/emergency_stop_monitor.py:6:1: I100 Import statements are in the wrong order. 'from geometry_msgs.msg import Twist' should be before 'from std_msgs.msg import Bool'
[1.186s] from geometry_msgs.msg import Twist
[1.186s] ^
[1.186s] 
[1.186s] ./turtle_gamepad_2/emergency_stop_monitor.py:30:1: D400 First line should end with a period
[1.186s]         """Monitor emergency stop status"""
[1.186s] ^
[1.186s] 
[1.186s] ./turtle_gamepad_2/emergency_stop_monitor.py:39:1: D400 First line should end with a period
[1.187s]         """Continuously enforce emergency stop by sending zero velocity"""
[1.187s] ^
[1.187s] 
[1.187s] ./turtle_gamepad_2/emergency_stop_monitor.py:45:1: D400 First line should end with a period
[1.187s]         """Trigger emergency stop externally"""
[1.187s] ^
[1.187s] 
[1.187s] ./turtle_gamepad_2/turtle_gamepad_controller.py:5:1: I100 Import statements are in the wrong order. 'from geometry_msgs.msg import Twist' should be before 'from rclpy.node import Node'
[1.187s] from geometry_msgs.msg import Twist
[1.187s] ^
[1.187s] 
[1.187s] ./turtle_gamepad_2/turtle_gamepad_controller.py:8:1: I100 Import statements are in the wrong order. 'import math' should be before 'from std_msgs.msg import Bool' and in a different group.
[1.187s] import math
[1.187s] ^
[1.187s] 
[1.187s] ./turtle_gamepad_2/turtle_gamepad_controller.py:8:1: I201 Missing newline between import groups. 'import math' is identified as Stdlib and 'from std_msgs.msg import Bool' is identified as Third Party.
[1.187s] import math
[1.187s] ^
[1.187s] 
[1.187s] ./turtle_gamepad_2/turtle_gamepad_controller.py:8:1: F401 'math' imported but unused
[1.187s] import math
[1.187s] ^
[1.188s] 
[1.188s] ./turtle_gamepad_2/turtle_gamepad_controller.py:21:100: E501 line too long (114 > 99 characters)
[1.188s]         self.emergency_subscriber = self.create_subscription(Bool, '/emergency_stop', self.emergency_callback, 10)
[1.188s]                                                                                                    ^
[1.188s] 
[1.188s] ./turtle_gamepad_2/turtle_gamepad_controller.py:53:1: D400 First line should end with a period
[1.188s]         """Handle joystick input"""
[1.188s] ^
[1.188s] 
[1.188s] ./turtle_gamepad_2/turtle_gamepad_controller.py:134:1: D400 First line should end with a period
[1.188s]         """Handle external emergency stop commands"""
[1.188s] ^
[1.188s] 
[1.188s] ./turtle_gamepad_2/turtle_gamepad_controller.py:143:1: D400 First line should end with a period
[1.188s]         """Publish emergency stop status"""
[1.188s] ^
[1.188s] 
[1.188s] 15    D400 First line should end with a period
[1.188s] 2     D401 First line should be in imperative mood; try rephrasing
[1.188s] 2     E501 line too long (109 > 99 characters)
[1.188s] 3     E712 comparison to True should be 'if cond is True:' or 'if cond:'
[1.188s] 12    F401 'launch.actions.IncludeLaunchDescription' imported but unused
[1.188s] 11    I100 Import statements are in the wrong order. 'from ament_index_python.packages import get_package_share_directory' should be before 'from launch_ros.substitutions import FindPackageShare'
[1.188s] 5     I201 Missing newline between import groups. 'from launch import LaunchDescription' is identified as Third Party and 'import os' is identified as Stdlib.
[1.189s] 
[1.189s] 11 files checked
[1.189s] 50 errors
[1.189s] 
[1.189s] 'D'-type errors: 17
[1.189s] 'E'-type errors: 5
[1.189s] 'F'-type errors: 12
[1.189s] 'I'-type errors: 16
[1.189s] 
[1.189s] Checked files:
[1.189s] 
[1.189s] * ./setup.py
[1.189s] * ./launch/turtle_gamepad_launch.py
[1.189s] * ./launch/turtle_gamepad_simple_launch.py
[1.189s] * ./turtle_gamepad_2/__init__.py
[1.189s] * ./turtle_gamepad_2/emergency_stop_monitor.py
[1.189s] * ./turtle_gamepad_2/turtle_gamepad_controller.py
[1.189s] * ./test/test_pep257.py
[1.189s] * ./test/test_emergency_stop_monitor.py
[1.189s] * ./test/test_turtle_gamepad_controller.py
[1.189s] * ./test/test_copyright.py
[1.189s] * ./test/test_flake8.py
[1.189s] [31m[1m_________________________________ test_pep257 __________________________________[0m
[1.190s] [1m[31mtest/test_pep257.py[0m:23: in test_pep257
[1.190s]     [94massert[39;49;00m rc == [94m0[39;49;00m, [33m'[39;49;00m[33mFound code style errors / warnings[39;49;00m[33m'[39;49;00m[90m[39;49;00m
[1.190s] [1m[31mE   AssertionError: Found code style errors / warnings[0m
[1.190s] [1m[31mE   assert 1 == 0[0m
[1.190s] ----------------------------- Captured stdout call -----------------------------
[1.190s] checking ./launch/turtle_gamepad_launch.py
[1.190s] checking ./launch/turtle_gamepad_simple_launch.py
[1.190s] checking ./setup.py
[1.190s] checking ./test/test_copyright.py
[1.190s] checking ./test/test_emergency_stop_monitor.py
[1.190s] checking ./test/test_flake8.py
[1.190s] checking ./test/test_pep257.py
[1.190s] checking ./test/test_turtle_gamepad_controller.py
[1.190s] checking ./turtle_gamepad_2/__init__.py
[1.190s] checking ./turtle_gamepad_2/emergency_stop_monitor.py
[1.190s] checking ./turtle_gamepad_2/turtle_gamepad_controller.py
[1.190s] checking test/test_copyright.py
[1.190s] checking test/test_emergency_stop_monitor.py
[1.190s] checking test/test_flake8.py
[1.190s] checking test/test_pep257.py
[1.190s] checking test/test_turtle_gamepad_controller.py
[1.190s] ----------------------------- Captured stderr call -----------------------------
[1.190s] ./test/test_emergency_stop_monitor.py:13 in public method `setup_class`: D400: First line should end with a period (not 't')
[1.191s] ./test/test_emergency_stop_monitor.py:13 in public method `setup_class`: D415: First line should end with a period, question mark, or exclamation point (not 't')
[1.191s] ./test/test_emergency_stop_monitor.py:13 in public method `setup_class`: D401: First line should be in imperative mood; try rephrasing (found 'Setup')
[1.191s] ./test/test_emergency_stop_monitor.py:18 in public method `teardown_class`: D400: First line should end with a period (not 't')
[1.191s] ./test/test_emergency_stop_monitor.py:18 in public method `teardown_class`: D415: First line should end with a period, question mark, or exclamation point (not 't')
[1.191s] ./test/test_emergency_stop_monitor.py:22 in public method `test_emergency_stop_status`: D400: First line should end with a period (not 'g')
[1.191s] ./test/test_emergency_stop_monitor.py:22 in public method `test_emergency_stop_status`: D415: First line should end with a period, question mark, or exclamation point (not 'g')
[1.191s] ./test/test_emergency_stop_monitor.py:29 in public method `test_zero_velocity_command`: D400: First line should end with a period (not 'n')
[1.191s] ./test/test_emergency_stop_monitor.py:29 in public method `test_zero_velocity_command`: D415: First line should end with a period, question mark, or exclamation point (not 'n')
[1.191s] ./test/test_turtle_gamepad_controller.py:16 in public method `setup_class`: D400: First line should end with a period (not 't')
[1.191s] ./test/test_turtle_gamepad_controller.py:16 in public method `setup_class`: D415: First line should end with a period, question mark, or exclamation point (not 't')
[1.191s] ./test/test_turtle_gamepad_controller.py:16 in public method `setup_class`: D401: First line should be in imperative mood; try rephrasing (found 'Setup')
[1.191s] ./test/test_turtle_gamepad_controller.py:21 in public method `teardown_class`: D400: First line should end with a period (not 't')
[1.191s] ./test/test_turtle_gamepad_controller.py:21 in public method `teardown_class`: D415: First line should end with a period, question mark, or exclamation point (not 't')
[1.191s] ./test/test_turtle_gamepad_controller.py:25 in public method `test_joy_message_format`: D400: First line should end with a period (not 't')
[1.191s] ./test/test_turtle_gamepad_controller.py:25 in public method `test_joy_message_format`: D415: First line should end with a period, question mark, or exclamation point (not 't')
[1.191s] ./test/test_turtle_gamepad_controller.py:34 in public method `test_twist_message_creation`: D400: First line should end with a period (not 'n')
[1.191s] ./test/test_turtle_gamepad_controller.py:34 in public method `test_twist_message_creation`: D415: First line should end with a period, question mark, or exclamation point (not 'n')
[1.191s] ./test/test_turtle_gamepad_controller.py:47 in public method `test_emergency_stop_message`: D400: First line should end with a period (not 'e')
[1.191s] ./test/test_turtle_gamepad_controller.py:47 in public method `test_emergency_stop_message`: D415: First line should end with a period, question mark, or exclamation point (not 'e')
[1.191s] ./turtle_gamepad_2/emergency_stop_monitor.py:30 in public method `status_callback`: D400: First line should end with a period (not 's')
[1.191s] ./turtle_gamepad_2/emergency_stop_monitor.py:30 in public method `status_callback`: D415: First line should end with a period, question mark, or exclamation point (not 's')
[1.191s] ./turtle_gamepad_2/emergency_stop_monitor.py:39 in public method `enforce_emergency_stop`: D400: First line should end with a period (not 'y')
[1.192s] ./turtle_gamepad_2/emergency_stop_monitor.py:39 in public method `enforce_emergency_stop`: D415: First line should end with a period, question mark, or exclamation point (not 'y')
[1.192s] ./turtle_gamepad_2/emergency_stop_monitor.py:45 in public method `trigger_emergency_stop`: D400: First line should end with a period (not 'y')
[1.192s] ./turtle_gamepad_2/emergency_stop_monitor.py:45 in public method `trigger_emergency_stop`: D415: First line should end with a period, question mark, or exclamation point (not 'y')
[1.192s] ./turtle_gamepad_2/turtle_gamepad_controller.py:53 in public method `joy_callback`: D400: First line should end with a period (not 't')
[1.192s] ./turtle_gamepad_2/turtle_gamepad_controller.py:53 in public method `joy_callback`: D415: First line should end with a period, question mark, or exclamation point (not 't')
[1.192s] ./turtle_gamepad_2/turtle_gamepad_controller.py:134 in public method `emergency_callback`: D400: First line should end with a period (not 's')
[1.192s] ./turtle_gamepad_2/turtle_gamepad_controller.py:134 in public method `emergency_callback`: D415: First line should end with a period, question mark, or exclamation point (not 's')
[1.192s] ./turtle_gamepad_2/turtle_gamepad_controller.py:143 in public method `publish_status`: D400: First line should end with a period (not 's')
[1.192s] ./turtle_gamepad_2/turtle_gamepad_controller.py:143 in public method `publish_status`: D415: First line should end with a period, question mark, or exclamation point (not 's')
[1.192s] test/test_emergency_stop_monitor.py:13 in public method `setup_class`: D400: First line should end with a period (not 't')
[1.192s] test/test_emergency_stop_monitor.py:13 in public method `setup_class`: D415: First line should end with a period, question mark, or exclamation point (not 't')
[1.192s] test/test_emergency_stop_monitor.py:13 in public method `setup_class`: D401: First line should be in imperative mood; try rephrasing (found 'Setup')
[1.192s] test/test_emergency_stop_monitor.py:18 in public method `teardown_class`: D400: First line should end with a period (not 't')
[1.192s] test/test_emergency_stop_monitor.py:18 in public method `teardown_class`: D415: First line should end with a period, question mark, or exclamation point (not 't')
[1.192s] test/test_emergency_stop_monitor.py:22 in public method `test_emergency_stop_status`: D400: First line should end with a period (not 'g')
[1.192s] test/test_emergency_stop_monitor.py:22 in public method `test_emergency_stop_status`: D415: First line should end with a period, question mark, or exclamation point (not 'g')
[1.192s] test/test_emergency_stop_monitor.py:29 in public method `test_zero_velocity_command`: D400: First line should end with a period (not 'n')
[1.192s] test/test_emergency_stop_monitor.py:29 in public method `test_zero_velocity_command`: D415: First line should end with a period, question mark, or exclamation point (not 'n')
[1.192s] test/test_turtle_gamepad_controller.py:16 in public method `setup_class`: D400: First line should end with a period (not 't')
[1.192s] test/test_turtle_gamepad_controller.py:16 in public method `setup_class`: D415: First line should end with a period, question mark, or exclamation point (not 't')
[1.192s] test/test_turtle_gamepad_controller.py:16 in public method `setup_class`: D401: First line should be in imperative mood; try rephrasing (found 'Setup')
[1.192s] test/test_turtle_gamepad_controller.py:21 in public method `teardown_class`: D400: First line should end with a period (not 't')
[1.193s] test/test_turtle_gamepad_controller.py:21 in public method `teardown_class`: D415: First line should end with a period, question mark, or exclamation point (not 't')
[1.193s] test/test_turtle_gamepad_controller.py:25 in public method `test_joy_message_format`: D400: First line should end with a period (not 't')
[1.193s] test/test_turtle_gamepad_controller.py:25 in public method `test_joy_message_format`: D415: First line should end with a period, question mark, or exclamation point (not 't')
[1.193s] test/test_turtle_gamepad_controller.py:34 in public method `test_twist_message_creation`: D400: First line should end with a period (not 'n')
[1.193s] test/test_turtle_gamepad_controller.py:34 in public method `test_twist_message_creation`: D415: First line should end with a period, question mark, or exclamation point (not 'n')
[1.193s] test/test_turtle_gamepad_controller.py:47 in public method `test_emergency_stop_message`: D400: First line should end with a period (not 'e')
[1.193s] test/test_turtle_gamepad_controller.py:47 in public method `test_emergency_stop_message`: D415: First line should end with a period, question mark, or exclamation point (not 'e')
[1.193s] 52 errors
[1.193s] - generated xml file: /home/jeff/omni-robot/build/turtle_gamepad_2/pytest.xml --
[1.193s] [36m[1m=========================== short test summary info ============================[0m
[1.193s] [31mFAILED[0m test/test_flake8.py::[1mtest_flake8[0m - AssertionError: Found 50 code style errors / warnings:
[1.193s] [31mFAILED[0m test/test_pep257.py::[1mtest_pep257[0m - AssertionError: Found code style errors / warnings
[1.193s] [31m============= [31m[1m2 failed[0m, [32m5 passed[0m, [33m1 skipped[0m, [33m12 warnings[0m[31m in 0.53s[0m[31m ==============[0m
[1.253s] Invoked command in '/home/jeff/omni-robot/src/turtle_gamepad_2' returned '1': DEBUGINFOD_URLS=https://debuginfod.ubuntu.com PYTEST_ADDOPTS=--tb=short --junit-xml=/home/jeff/omni-robot/build/turtle_gamepad_2/pytest.xml --junit-prefix=turtle_gamepad_2 -o cache_dir=/home/jeff/omni-robot/build/turtle_gamepad_2/.pytest_cache PYTHONDONTWRITEBYTECODE=1 /usr/bin/python3 -m pytest
